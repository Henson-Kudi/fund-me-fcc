{
  "address": "0xcAd36A3c96d4311c560C49f19dcBB2ea41a82c47",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x80cc5f0e897c7a8a7293f68e71dcb37b1f9aa9028c8d19a7d8c454a0ff40aafd",
  "receipt": {
    "to": null,
    "from": "0x224362e39De59583e5F20aE9380B1Cb2505AD14E",
    "contractAddress": "0xcAd36A3c96d4311c560C49f19dcBB2ea41a82c47",
    "transactionIndex": 1,
    "gasUsed": "956459",
    "logsBloom": "0x
    "blockHash": "0x20aac94b1c595f9f1defd4f339468c6c7c1c87f2f1bcd67f3cd116d4ad89067d",
    "transactionHash": "0x80cc5f0e897c7a8a7293f68e71dcb37b1f9aa9028c8d19a7d8c454a0ff40aafd",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 26582859,
        "transactionHash": "0x80cc5f0e897c7a8a7293f68e71dcb37b1f9aa9028c8d19a7d8c454a0ff40aafd",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000224362e39de59583e5f20ae9380b1cb2505ad14e",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x000000000000000000000000000000000000000000000000009a99b8a656e0ca00000000000000000000000000000000000000000000000002e8efb1e111a9e4000000000000000000000000000000000000000000001980471bfdbee034753a000000000000000000000000000000000000000000000000024e55f93abac91a00000000000000000000000000000000000000000000198047b69777868b5604",
        "logIndex": 10,
        "blockHash": "0x20aac94b1c595f9f1defd4f339468c6c7c1c87f2f1bcd67f3cd116d4ad89067d"
      }
    ],
    "blockNumber": 26582859,
    "cumulativeGasUsed": "1243415",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0715A7794a1dc8e42615F059dD6e406A6594651A"
  ],
  "numDeployments": 1,
  "solcInputHash": "85f1860b9446662694910250e990f2bb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    \\n    constructor(AggregatorV3Interface priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n    function getVersion() public view returns (uint256){\\n        AggregatorV3Interface priceFeedElement = AggregatorV3Interface(priceFeed);\\n        return priceFeedElement.version();\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() payable onlyOwner public {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\",\"keccak256\":\"0xe2cccf750909699be68ce1d8a7811993a6e338c1730bfd8ac309eacd872a5299\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // Rinkeby ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversation rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xeeca25bbe32e60a5cd1b7b9c6602fa2d8a67a2e170645028f4291300e5db5715\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620011003803806200110083398181016040528101906200003791906200013d565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200016f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f182620000c4565b9050919050565b60006200010582620000e4565b9050919050565b6200011781620000f8565b81146200012357600080fd5b50565b60008151905062000137816200010c565b92915050565b600060208284031215620001565762000155620000bf565b5b6000620001668482850162000126565b91505092915050565b610f81806200017f6000396000f3fe60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a14610135578063b60d428814610160578063dba6335f1461016a578063dc0d3dff146101955761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100cd5780636b69a5921461010a5761008e565b3661008e5761008c6101d2565b005b6100966101d2565b005b3480156100a457600080fd5b506100ad61030b565b6040516100ba9190610842565b60405180910390f35b6100cb6103b5565b005b3480156100d957600080fd5b506100f460048036038101906100ef91906108c0565b6105f8565b6040516101019190610842565b60405180910390f35b34801561011657600080fd5b5061011f610610565b60405161012c9190610842565b60405180910390f35b34801561014157600080fd5b5061014a61061d565b604051610157919061094c565b60405180910390f35b6101686101d2565b005b34801561017657600080fd5b5061017f610641565b60405161018c9190610976565b60405180910390f35b3480156101a157600080fd5b506101bc60048036038101906101b791906109bd565b610667565b6040516101c99190610976565b60405180910390f35b6802b5e3af16b188000061020f60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106a690919063ffffffff16565b1015610250576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024790610a47565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461029f9190610a96565b925050819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561037757600080fd5b505afa15801561038b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103af9190610b01565b91505090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461043c576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6002805490508110156104e85760006002828154811061046257610461610b2e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104e090610b5d565b91505061043f565b50600067ffffffffffffffff81111561050457610503610ba6565b5b6040519080825280602002602001820160405280156105325781602001602082028036833780820191505090505b5060029080519060200190610548929190610782565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161056f90610c06565b60006040518083038185875af1925050503d80600081146105ac576040519150601f19603f3d011682016040523d82523d6000602084013e6105b1565b606091505b50509050806105f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ec90610c67565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002818154811061067757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106b2836106e2565b90506000670de0b6b3a764000085836106cb9190610c87565b6106d59190610d10565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561072b57600080fd5b505afa15801561073f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107639190610db9565b5050509150506402540be4008161077a9190610e34565b915050919050565b8280548282559060005260206000209081019282156107fb579160200282015b828111156107fa5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107a2565b5b509050610808919061080c565b5090565b5b8082111561082557600081600090555060010161080d565b5090565b6000819050919050565b61083c81610829565b82525050565b60006020820190506108576000830184610833565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061088d82610862565b9050919050565b61089d81610882565b81146108a857600080fd5b50565b6000813590506108ba81610894565b92915050565b6000602082840312156108d6576108d561085d565b5b60006108e4848285016108ab565b91505092915050565b6000819050919050565b600061091261090d61090884610862565b6108ed565b610862565b9050919050565b6000610924826108f7565b9050919050565b600061093682610919565b9050919050565b6109468161092b565b82525050565b6000602082019050610961600083018461093d565b92915050565b61097081610882565b82525050565b600060208201905061098b6000830184610967565b92915050565b61099a81610829565b81146109a557600080fd5b50565b6000813590506109b781610991565b92915050565b6000602082840312156109d3576109d261085d565b5b60006109e1848285016109a8565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a31601b836109ea565b9150610a3c826109fb565b602082019050919050565b60006020820190508181036000830152610a6081610a24565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aa182610829565b9150610aac83610829565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ae157610ae0610a67565b5b828201905092915050565b600081519050610afb81610991565b92915050565b600060208284031215610b1757610b1661085d565b5b6000610b2584828501610aec565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b6882610829565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b9b57610b9a610a67565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610bf0600083610bd5565b9150610bfb82610be0565b600082019050919050565b6000610c1182610be3565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c51600b836109ea565b9150610c5c82610c1b565b602082019050919050565b60006020820190508181036000830152610c8081610c44565b9050919050565b6000610c9282610829565b9150610c9d83610829565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cd657610cd5610a67565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d1b82610829565b9150610d2683610829565b925082610d3657610d35610ce1565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d6081610d41565b8114610d6b57600080fd5b50565b600081519050610d7d81610d57565b92915050565b6000819050919050565b610d9681610d83565b8114610da157600080fd5b50565b600081519050610db381610d8d565b92915050565b600080600080600060a08688031215610dd557610dd461085d565b5b6000610de388828901610d6e565b9550506020610df488828901610da4565b9450506040610e0588828901610aec565b9350506060610e1688828901610aec565b9250506080610e2788828901610d6e565b9150509295509295909350565b6000610e3f82610d83565b9150610e4a83610d83565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e8957610e88610a67565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ec657610ec5610a67565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f0357610f02610a67565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f4057610f3f610a67565b5b82820290509291505056fea2646970667358221220692f87b0f7e652b54aabbbf30064169940f0cf2e34a4508ac49cf882dd3d986364736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a14610135578063b60d428814610160578063dba6335f1461016a578063dc0d3dff146101955761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100cd5780636b69a5921461010a5761008e565b3661008e5761008c6101d2565b005b6100966101d2565b005b3480156100a457600080fd5b506100ad61030b565b6040516100ba9190610842565b60405180910390f35b6100cb6103b5565b005b3480156100d957600080fd5b506100f460048036038101906100ef91906108c0565b6105f8565b6040516101019190610842565b60405180910390f35b34801561011657600080fd5b5061011f610610565b60405161012c9190610842565b60405180910390f35b34801561014157600080fd5b5061014a61061d565b604051610157919061094c565b60405180910390f35b6101686101d2565b005b34801561017657600080fd5b5061017f610641565b60405161018c9190610976565b60405180910390f35b3480156101a157600080fd5b506101bc60048036038101906101b791906109bd565b610667565b6040516101c99190610976565b60405180910390f35b6802b5e3af16b188000061020f60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106a690919063ffffffff16565b1015610250576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024790610a47565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461029f9190610a96565b925050819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561037757600080fd5b505afa15801561038b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103af9190610b01565b91505090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461043c576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6002805490508110156104e85760006002828154811061046257610461610b2e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104e090610b5d565b91505061043f565b50600067ffffffffffffffff81111561050457610503610ba6565b5b6040519080825280602002602001820160405280156105325781602001602082028036833780820191505090505b5060029080519060200190610548929190610782565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161056f90610c06565b60006040518083038185875af1925050503d80600081146105ac576040519150601f19603f3d011682016040523d82523d6000602084013e6105b1565b606091505b50509050806105f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ec90610c67565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002818154811061067757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106b2836106e2565b90506000670de0b6b3a764000085836106cb9190610c87565b6106d59190610d10565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561072b57600080fd5b505afa15801561073f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107639190610db9565b5050509150506402540be4008161077a9190610e34565b915050919050565b8280548282559060005260206000209081019282156107fb579160200282015b828111156107fa5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107a2565b5b509050610808919061080c565b5090565b5b8082111561082557600081600090555060010161080d565b5090565b6000819050919050565b61083c81610829565b82525050565b60006020820190506108576000830184610833565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061088d82610862565b9050919050565b61089d81610882565b81146108a857600080fd5b50565b6000813590506108ba81610894565b92915050565b6000602082840312156108d6576108d561085d565b5b60006108e4848285016108ab565b91505092915050565b6000819050919050565b600061091261090d61090884610862565b6108ed565b610862565b9050919050565b6000610924826108f7565b9050919050565b600061093682610919565b9050919050565b6109468161092b565b82525050565b6000602082019050610961600083018461093d565b92915050565b61097081610882565b82525050565b600060208201905061098b6000830184610967565b92915050565b61099a81610829565b81146109a557600080fd5b50565b6000813590506109b781610991565b92915050565b6000602082840312156109d3576109d261085d565b5b60006109e1848285016109a8565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a31601b836109ea565b9150610a3c826109fb565b602082019050919050565b60006020820190508181036000830152610a6081610a24565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aa182610829565b9150610aac83610829565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ae157610ae0610a67565b5b828201905092915050565b600081519050610afb81610991565b92915050565b600060208284031215610b1757610b1661085d565b5b6000610b2584828501610aec565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b6882610829565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b9b57610b9a610a67565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610bf0600083610bd5565b9150610bfb82610be0565b600082019050919050565b6000610c1182610be3565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c51600b836109ea565b9150610c5c82610c1b565b602082019050919050565b60006020820190508181036000830152610c8081610c44565b9050919050565b6000610c9282610829565b9150610c9d83610829565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cd657610cd5610a67565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d1b82610829565b9150610d2683610829565b925082610d3657610d35610ce1565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d6081610d41565b8114610d6b57600080fd5b50565b600081519050610d7d81610d57565b92915050565b6000819050919050565b610d9681610d83565b8114610da157600080fd5b50565b600081519050610db381610d8d565b92915050565b600080600080600060a08688031215610dd557610dd461085d565b5b6000610de388828901610d6e565b9550506020610df488828901610da4565b9450506040610e0588828901610aec565b9350506060610e1688828901610aec565b9250506080610e2788828901610d6e565b9150509295509295909350565b6000610e3f82610d83565b9150610e4a83610d83565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e8957610e88610a67565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ec657610ec5610a67565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f0357610f02610a67565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f4057610f3f610a67565b5b82820290509291505056fea2646970667358221220692f87b0f7e652b54aabbbf30064169940f0cf2e34a4508ac49cf882dd3d986364736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 57,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}